version: '3.8'

services:
    music-db:
        image: postgres:14
        restart: always
        ports:
            - '5432:5432'    
        volumes:
            - ./db_data/music:/var/lib/postgresql/data
        env_file:
            - .env    
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "devdb", "-U","postgres" ]
            timeout: 45s
            interval: 10s
            retries: 10
    user-db:
        image: postgres:14
        restart: always
        ports:
            - '5433:5432'
        expose:
            - "5433"        
        volumes:
            - ./db_data/users:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${USERDB_POSTGRES_DB}
            POSTGRES_USER:  ${USERDB_POSTGRES_USER}
            POSTGRES_PASSWORD:  ${USERDB_POSTGRES_PASSWORD}  
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "userdb", "-U","postgres" ]
            timeout: 45s
            interval: 10s
            retries: 10        
    migrate-1:
        image: migrate/migrate
        restart: on-failure
        depends_on:
          music-db:
            condition: service_healthy   
        volumes:
            - ./music/migrations:/migrations/music
        command:
          [ "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_IP}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable" , "-path", "/migrations/music", "up" ]
    migrate-2:
        image: migrate/migrate
        restart: on-failure
        depends_on:
          music-db:
            condition: service_healthy   
        volumes:
            - ./gateway/migrations:/migrations/gateway
        command:
          [ "-database",  "postgres://${USERDB_POSTGRES_USER}:${USERDB_POSTGRES_PASSWORD}@${USERDB_POSTGRES_IP}:${USERDB_POSTGRES_PORT}/${USERDB_POSTGRES_DB}?sslmode=disable" , "-path", "/migrations/gateway", "up" ]     
    gateway-redis:
        image: redis:6.2
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock      
        ports:
          - 6379:6379       
    gateway:
        build: 
          context: ./gateway/app
          dockerfile: Dockerfile
        env_file:
            - .env
        volumes:
            - ./configs:/configs
        ports:
          - 8080:8080    
        depends_on:
          - user-db
          - gateway-redis 
    music:
        build: 
          context: ./music/app
          dockerfile: Dockerfile
        ports:
          - 30000:30000  
        env_file:
            - .env
        volumes:
            - ./configs:/configs
    email:
        build: 
          context: ./email/app
          dockerfile: Dockerfile
        ports:
          - 30001:30001  
        env_file:
            - .env
        volumes:
            - ./configs:/configs
        depends_on:
          - nats                   
    nats:
        image: nats:2.8.4-alpine3.15
        command: 
            "-js"
        ports:
          - 4222:4222
        expose:
          - "4222"        



        