syntax = "proto3";

package proto.music_service.album.v1;

option go_package = "github.com/VrMolodyakov/vgm/music/app/gen/go/proto/music_service/album/v1;pb_music_album";

import "proto/music_service/album/v1/album.proto";
import "proto/filter/v1/filter.proto";


service MusicService {
    rpc CreateAlbum(CreateAlbumRequest) returns (CreateAlbumResponse) {}
    rpc FindAlbum(FindAlbumRequest) returns (FindAlbumResponse) {}
    rpc DeleteAlbum(DeleteAlbumRequest) returns (DeleteAlbumResponse) {}
    rpc UpdateAlbum(UpdateAlbumRequest) returns (UpdateAlbumResponse) {}
    rpc FindFullAlbum(FindFullAlbumRequest) returns (FindFullAlbumResponse) {}
    rpc FindAllAlbums(FindAllAlbumsRequest) returns (FindAllAlbumsResponse) {}
    rpc FindAllPersons(FindAllPersonsRequest) returns (FindAllPersonsResponse) {}
    rpc CreatePerson(CreatePersonRequest) returns (CreatePersonResponse) {}
}

message FindAllPersonsRequest{
    filter.v1.Pagination pagination = 1;
    filter.v1.StringFieldFilter full_name = 2;
}
message FindAllPersonsResponse{
    repeated Person person = 1;
}

message CreatePersonRequest{
    string first_name = 1;
    string last_name = 2;
    int64 birth_date = 3;
}
message CreatePersonResponse{
    Person person = 1;
}

message Person {
    int64 person_id  = 1;
    string first_name = 2;
    string last_name = 3;
    int64 birth_date = 4;
}
  
message CreateAlbumRequest{
    string title = 1;
    int64  released_at = 2;
    string catalog_number = 3;
    optional string full_image_src = 4;
    optional string small_image_src = 5;
    optional string barcode = 6;
    double price = 7;
    string currency_code = 8;
    string media_format = 9;
    string classification = 10;
    string publisher = 11;
    repeated Track tracklist = 12;
    repeated Credit credits = 13;
}

message CreateAlbumResponse{
}

message Credit {
    string profession = 1;
    int64 person_id = 2;
}

message CreditInfo {
    string profession = 1;
    string first_name = 2;
    string last_name = 3;
}

message Track{
    string title = 1;
    string duration = 2;    
}

message AlbumView{
    string id = 1;
    string title = 2;
    int64  released_at = 3;
    int64  created_at = 4;   
}

message AlbumInfo{
    string catalog_number = 1;
    optional string full_image_src = 2;
    optional string small_image_src = 3;
    optional string barcode = 4;
    double price = 5;
    string currency_code = 6;
    string media_format = 7;
    string classification = 8;
    string publisher = 9;
}

message TrackInfo{
    int64 id = 1;
    int64 album_id = 2;
    string title = 3;   
    string duration = 4;    
}

message FindAlbumRequest {
    string title = 1;
}

message FindAlbumResponse{
    Album album = 1;
}

message FindFullAlbumRequest{
    string album_id = 1;
}

message FindFullAlbumResponse{
    Album album = 1;
    AlbumInfo info = 2;
    repeated TrackInfo tracklist = 3;
    repeated CreditInfo credits = 4;
}

message FindAllAlbumsRequest{
    filter.v1.Pagination pagination = 1;
    filter.v1.StringFieldFilter title = 2;
    filter.v1.IntFieldFilter released_at = 3;
    filter.v1.Sort sort = 4;
}
message FindAllAlbumsResponse{
    repeated Album albums = 1;
} 

message DeleteAlbumRequest{
    string id = 1;
} 

message DeleteAlbumResponse{
} 

message UpdateAlbumRequest{
    string id = 1;
    optional string title = 2;
    optional int64 created_at = 3;
    optional int64 released_at = 4;
} 

message UpdateAlbumResponse{
} 

