syntax = "proto3";

package proto.music_service.album.v1;

option go_package = "github.com/VrMolodyakov/vgm/music/app/gen/go/proto/music_service/album/v1;pb_music_album";

import "proto/music_service/album/v1/album.proto";
import "proto/music_service/credit/v1/credit.proto";
import "proto/music_service/track/v1/track.proto";
import "proto/music_service/info/v1/info.proto";
import "proto/filter/v1/filter.proto";


service AlbumService {
    rpc CreateAlbum(CreateAlbumRequest) returns (CreateAlbumResponse) {}
    rpc FindAlbum(FindAlbumRequest) returns (FindAlbumResponse) {}
    rpc DeleteAlbum(DeleteAlbumRequest) returns (DeleteAlbumResponse) {}
    rpc UpdateAlbum(UpdateAlbumRequest) returns (UpdateAlbumResponse) {}
    rpc FindFullAlbum(FindFullAlbumRequest) returns (FindFullAlbumResponse) {}
    rpc FindAllAlbums(FindAllAlbumsRequest) returns (FindAllAlbumsResponse) {}
}
  

message CreateAlbumRequest {
    string title = 1;
    int64 release_at = 2;
}

message CreateAlbumResponse{
    Album album = 1;
}


message FindAlbumRequest {
    string title = 1;
}

message FullAlbum{
    Album album = 1;
    proto.music_service.info.v1.Info info = 4;
    repeated proto.music_service.credit.v1.Credit credits = 2;
    repeated proto.music_service.track.v1.Track tracklist = 3;
}

message FindAlbumResponse{
    Album album = 1;
}

message FindFullAlbumRequest{
    string title = 1;
}

message FindFullAlbumResponse{
    FullAlbum album = 1;
}

message FindAllAlbumsRequest{
    filter.v1.Pagination pagination = 1;
    filter.v1.StringFieldFilter title = 2;
    filter.v1.IntFieldFilter released_at = 3;
    filter.v1.Sort sort = 4;
}
message FindAllAlbumsResponse{
    repeated Album albums = 1;
} 

message DeleteAlbumRequest{
    string id = 1;
} 


message DeleteAlbumResponse{
} 


message UpdateAlbumRequest{
    string id = 1;
    optional string title = 2;
    optional int64 created_at = 3;
    optional int64 released_at = 4;
} 

message UpdateAlbumResponse{
} 

