// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/music_service/info/v1/info_service.proto

package pb_music_album

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAlbumInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId        string  `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	CatalogNumber  string  `protobuf:"bytes,2,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty"`
	ImageSrc       *string `protobuf:"bytes,3,opt,name=image_src,json=imageSrc,proto3,oneof" json:"image_src,omitempty"`
	Barcode        *string `protobuf:"bytes,4,opt,name=barcode,proto3,oneof" json:"barcode,omitempty"`
	Price          float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	CurrencyCode   string  `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	MediaFormat    string  `protobuf:"bytes,7,opt,name=media_format,json=mediaFormat,proto3" json:"media_format,omitempty"`
	Classification string  `protobuf:"bytes,8,opt,name=classification,proto3" json:"classification,omitempty"`
	Publisher      string  `protobuf:"bytes,9,opt,name=publisher,proto3" json:"publisher,omitempty"`
}

func (x *CreateAlbumInfoRequest) Reset() {
	*x = CreateAlbumInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlbumInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlbumInfoRequest) ProtoMessage() {}

func (x *CreateAlbumInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlbumInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateAlbumInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_music_service_info_v1_info_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAlbumInfoRequest) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetCatalogNumber() string {
	if x != nil {
		return x.CatalogNumber
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetImageSrc() string {
	if x != nil && x.ImageSrc != nil {
		return *x.ImageSrc
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetBarcode() string {
	if x != nil && x.Barcode != nil {
		return *x.Barcode
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateAlbumInfoRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetMediaFormat() string {
	if x != nil {
		return x.MediaFormat
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

func (x *CreateAlbumInfoRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

type CreateAlbumInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateAlbumInfoResponse) Reset() {
	*x = CreateAlbumInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlbumInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlbumInfoResponse) ProtoMessage() {}

func (x *CreateAlbumInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlbumInfoResponse.ProtoReflect.Descriptor instead.
func (*CreateAlbumInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_music_service_info_v1_info_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAlbumInfoResponse) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type FindAlbumInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId string `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
}

func (x *FindAlbumInfoRequest) Reset() {
	*x = FindAlbumInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAlbumInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAlbumInfoRequest) ProtoMessage() {}

func (x *FindAlbumInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAlbumInfoRequest.ProtoReflect.Descriptor instead.
func (*FindAlbumInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_music_service_info_v1_info_service_proto_rawDescGZIP(), []int{2}
}

func (x *FindAlbumInfoRequest) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

type FindAlbumInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *FindAlbumInfoResponse) Reset() {
	*x = FindAlbumInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAlbumInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAlbumInfoResponse) ProtoMessage() {}

func (x *FindAlbumInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_music_service_info_v1_info_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAlbumInfoResponse.ProtoReflect.Descriptor instead.
func (*FindAlbumInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_music_service_info_v1_info_service_proto_rawDescGZIP(), []int{3}
}

func (x *FindAlbumInfoResponse) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_proto_music_service_info_v1_info_service_proto protoreflect.FileDescriptor

var file_proto_music_service_info_v1_info_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x72, 0x63, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x50, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x31, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x87, 0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56,
	0x72, 0x4d, 0x6f, 0x6c, 0x6f, 0x64, 0x79, 0x61, 0x6b, 0x6f, 0x76, 0x2f, 0x76, 0x67, 0x6d, 0x2f,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x5f,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_music_service_info_v1_info_service_proto_rawDescOnce sync.Once
	file_proto_music_service_info_v1_info_service_proto_rawDescData = file_proto_music_service_info_v1_info_service_proto_rawDesc
)

func file_proto_music_service_info_v1_info_service_proto_rawDescGZIP() []byte {
	file_proto_music_service_info_v1_info_service_proto_rawDescOnce.Do(func() {
		file_proto_music_service_info_v1_info_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_music_service_info_v1_info_service_proto_rawDescData)
	})
	return file_proto_music_service_info_v1_info_service_proto_rawDescData
}

var file_proto_music_service_info_v1_info_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_music_service_info_v1_info_service_proto_goTypes = []interface{}{
	(*CreateAlbumInfoRequest)(nil),  // 0: proto.music_service.info.v1.CreateAlbumInfoRequest
	(*CreateAlbumInfoResponse)(nil), // 1: proto.music_service.info.v1.CreateAlbumInfoResponse
	(*FindAlbumInfoRequest)(nil),    // 2: proto.music_service.info.v1.FindAlbumInfoRequest
	(*FindAlbumInfoResponse)(nil),   // 3: proto.music_service.info.v1.FindAlbumInfoResponse
	(*Info)(nil),                    // 4: proto.music_service.info.v1.Info
}
var file_proto_music_service_info_v1_info_service_proto_depIdxs = []int32{
	4, // 0: proto.music_service.info.v1.CreateAlbumInfoResponse.info:type_name -> proto.music_service.info.v1.Info
	4, // 1: proto.music_service.info.v1.FindAlbumInfoResponse.info:type_name -> proto.music_service.info.v1.Info
	0, // 2: proto.music_service.info.v1.InfoService.CreateAlbumInfo:input_type -> proto.music_service.info.v1.CreateAlbumInfoRequest
	2, // 3: proto.music_service.info.v1.InfoService.FindAlbumInfo:input_type -> proto.music_service.info.v1.FindAlbumInfoRequest
	1, // 4: proto.music_service.info.v1.InfoService.CreateAlbumInfo:output_type -> proto.music_service.info.v1.CreateAlbumInfoResponse
	3, // 5: proto.music_service.info.v1.InfoService.FindAlbumInfo:output_type -> proto.music_service.info.v1.FindAlbumInfoResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_music_service_info_v1_info_service_proto_init() }
func file_proto_music_service_info_v1_info_service_proto_init() {
	if File_proto_music_service_info_v1_info_service_proto != nil {
		return
	}
	file_proto_music_service_info_v1_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_music_service_info_v1_info_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlbumInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_music_service_info_v1_info_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlbumInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_music_service_info_v1_info_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAlbumInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_music_service_info_v1_info_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAlbumInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_music_service_info_v1_info_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_music_service_info_v1_info_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_music_service_info_v1_info_service_proto_goTypes,
		DependencyIndexes: file_proto_music_service_info_v1_info_service_proto_depIdxs,
		MessageInfos:      file_proto_music_service_info_v1_info_service_proto_msgTypes,
	}.Build()
	File_proto_music_service_info_v1_info_service_proto = out.File
	file_proto_music_service_info_v1_info_service_proto_rawDesc = nil
	file_proto_music_service_info_v1_info_service_proto_goTypes = nil
	file_proto_music_service_info_v1_info_service_proto_depIdxs = nil
}
